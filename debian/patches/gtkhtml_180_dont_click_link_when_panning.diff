diff -r -U5 gtkhtml-3.24.0/gtkhtml/gtkhtml.c gtkhtml-3.24.0-180/gtkhtml/gtkhtml.c
--- gtkhtml-3.24.0/gtkhtml/gtkhtml.c	2008-10-16 12:07:24.000000000 +0200
+++ gtkhtml-3.24.0-180/gtkhtml/gtkhtml.c	2008-10-16 12:09:36.000000000 +0200
@@ -1712,10 +1712,11 @@
 	GdkWindow *window = widget->window;
 	HTMLEngine *engine;
 	gint x, y;
 	guint mouse_double_click_threshold = MOUSE_DBLCLK_THRESHOLD ;
 	GtkSettings *gtk_settings = gtk_widget_get_settings (widget) ;
+	GtkHTML *html = NULL ;
 
 	if (NULL != gtk_settings)
 		g_object_get (G_OBJECT (gtk_settings), "gtk-double-click-distance", &mouse_double_click_threshold, NULL) ;
 
 	g_return_val_if_fail (widget != NULL, 0);
@@ -1731,55 +1732,60 @@
 
 	gdk_window_get_pointer (GTK_LAYOUT (widget)->bin_window, &x, &y, NULL);
 	if (event->is_hint)
 		gdk_device_get_state (event->device, GTK_LAYOUT (widget)->bin_window, NULL, NULL) ;
 
+	html = GTK_HTML (widget) ;
+
 	/* If there is only a small motion from the origin and simple 
 	   doubleclick is active, abort the motion, otherwise clear simple_dblclick flag */
-	if (GTK_HTML (widget)->simple_dblclick) {
-	    GtkHTML *html = GTK_HTML (widget);
-	    
+	if (html->simple_dblclick) {
 	    if (abs(x - html->selection_x1) <= mouse_double_click_threshold && 
 		abs(y - html->selection_y1) <= mouse_double_click_threshold)
 		return TRUE;
 		
 	    html->simple_dblclick = FALSE;
 	}
 	
 	if (!mouse_change_pos (widget, window, x, y, event->state))
 		return FALSE;
 
-	engine = GTK_HTML (widget)->engine;
-	if (GTK_HTML (widget)->in_selection_drag && html_engine_get_editable (engine))
+	engine = html->engine;
+	if (html->in_selection_drag && html_engine_get_editable (engine))
 		html_engine_jump_at (engine, x, y);
 
 	/* (TL 18-Nov-05) Added panning feature */
-	if (GTK_HTML (widget)->panning) {
+	if (html->panning) {
 		GtkAdjustment *adj;
 		gint dx, dy;
 		gdouble value;
 
-		dx = x - GTK_HTML (widget)->lastx;
-		dy = y - GTK_HTML (widget)->lasty;
+		dx = x - html->lastx;
+		dy = y - html->lasty;
 
 		/* Vertical panning */
 		adj = gtk_layout_get_vadjustment(GTK_LAYOUT(widget));
 		value = adj->value - (gdouble) dy;
 		if (value < adj->lower)
 			value = adj->lower;
 		else if (value > (adj->upper - adj->page_size))
 			value = adj->upper - adj->page_size;
+		if (ABS (html->y_amount_panned) < mouse_double_click_threshold)
+			html->y_amount_panned += (gint)(value - adj->value) ;
 		gtk_adjustment_set_value(adj, value);
 
 		/* Horizontal panning */
 		adj = gtk_layout_get_hadjustment(GTK_LAYOUT(widget));
 		value = adj->value - (gdouble) dx;
 		if (value < adj->lower)
 			value = adj->lower;
 		else if (value > (adj->upper - adj->page_size))
 			value = adj->upper - adj->page_size;
+		if (ABS (html->x_amount_panned) < mouse_double_click_threshold)
+			html->x_amount_panned += (gint)(value - adj->value) ;
 		gtk_adjustment_set_value(adj, value);
+
 	}
 
 	return TRUE;
 }
 
@@ -1830,18 +1836,20 @@
 		    GdkEventButton *event)
 {
 	GtkHTML *html;
 	GtkWidget *orig_widget = widget;
 	HTMLEngine *engine;
-	gint value, x, y;
+	gint value, x, y, xWnd, yWnd;
 
 	/* printf ("button_press_event\n"); */
 
 	x = event->x;
 	y = event->y;
 
+	gdk_window_get_pointer (widget->window, &xWnd, &yWnd, NULL) ;
 	widget = shift_to_iframe_parent (widget, &x, &y);
+	shift_to_iframe_parent (orig_widget, &xWnd, &yWnd) ;
 	html   = GTK_HTML (widget);
 	engine = html->engine;
 
 	if (event->button == 1 || ((event->button == 2 || event->button == 3)
 				   && html_engine_get_editable (engine)))
@@ -1897,12 +1905,14 @@
 		case 1:
 			/*html->in_selection_drag = TRUE;*/
 			/* (TL 18-Nov-05) First click starts panning, not selection */
 			html->in_selection_drag = FALSE;
 			html->panning = TRUE;
-			html->lastx = x;
-			html->lasty = y;
+			html->x_amount_panned =
+			html->y_amount_panned = 0 ;
+			html->lastx = xWnd + gtk_adjustment_get_value (gtk_layout_get_hadjustment (GTK_LAYOUT (widget)));
+			html->lasty = yWnd + gtk_adjustment_get_value (gtk_layout_get_vadjustment (GTK_LAYOUT (widget)));
 
 			if (html_engine_get_editable (engine)) {
 				HTMLObject *obj;
 
 				obj = html_engine_get_object_at (engine, x, y, NULL, FALSE);
@@ -1970,10 +1980,12 @@
 			/*html->in_selection_drag = FALSE;
 			gtk_html_select_word (html);*/
 			/* (TL 18-Nov-05) Second click starts selection and stops panning */
 			html->in_selection_drag = TRUE;
 			html->panning = FALSE;
+			html->x_amount_panned =
+			html->y_amount_panned = 0 ;
 			html->in_selection = TRUE;
 			/* Check for simple double click, for selecting a word */
 			html->simple_dblclick = TRUE;
         		html->selection_x1 = x;
 			html->selection_y1 = y;
@@ -1982,10 +1994,12 @@
 			/*html->in_selection_drag = FALSE;
 			gtk_html_select_line (html);*/
 			/* (TL 18-Nov-05) Third click starts selection and stops panning */
 			html->in_selection_drag = TRUE;
 			html->panning = FALSE;
+			html->x_amount_panned =
+			html->y_amount_panned = 0 ;
 			html->in_selection = TRUE;
 		}
 	}
 
 	return FALSE;
@@ -2025,10 +2039,16 @@
 		update_primary_selection (html);
 		queue_draw (html);
 	}
 
 	if (event->button == 1) {
+	  guint mouse_double_click_threshold = MOUSE_DBLCLK_THRESHOLD ;
+	  GtkSettings *gtk_settings = gtk_widget_get_settings (widget) ;
+
+	  if (NULL != gtk_settings)
+		  g_object_get (G_OBJECT (gtk_settings), "gtk-double-click-distance", &mouse_double_click_threshold, NULL) ;
+
 
 		if (html->in_selection_drag && html_engine_get_editable (engine))
 			html_engine_jump_at (engine, x, y);
 
 		html->in_selection_drag = FALSE;
@@ -2056,6 +2056,8 @@
 		html->panning = FALSE;
 
 		if (!html->priv->dnd_in_progress
+		    && ABS (html->x_amount_panned) < mouse_double_click_threshold
+		    && ABS (html->y_amount_panned) < mouse_double_click_threshold
 		    && html->pointer_url != NULL && ! html->in_selection
 		    && (!gtk_html_get_editable (html) || html->priv->in_url_test_mode)) {
 			g_signal_emit (widget,  signals[LINK_CLICKED], 0, html->pointer_url);
@@ -2059,11 +2079,14 @@
 				focus_object = html_engine_get_object_at (html->engine, x, y, &offset, TRUE);
 				if (HTML_IS_TEXT (focus_object))
 					html_text_set_link_visited (HTML_TEXT (focus_object), (gint) offset, html->engine, TRUE);
 			}
 		}
-		
+
+		html->x_amount_panned =
+		html->y_amount_panned = 0 ;
+
 		/* If it was a simple doubleclick select a word */
 		if (html->simple_dblclick) {
 		    html->simple_dblclick = FALSE;
 		    gtk_html_select_word(html);
 		}
@@ -3399,10 +3422,12 @@
 	html->selection_x1 = 0;
 	html->selection_y1 = 0;
 
 	/* (TL 18-Nov-05) For panning */
 	html->panning = FALSE;
+	html->x_amount_panned =
+	html->y_amount_panned = 0 ;
 	html->lastx = 0;
 	html->lasty = 0;
 
 	html->in_selection = FALSE;
 	html->in_selection_drag = FALSE;
diff -r -U5 gtkhtml-3.24.0/gtkhtml/gtkhtml.h gtkhtml-3.24.0-180/gtkhtml/gtkhtml.h
--- gtkhtml-3.24.0/gtkhtml/gtkhtml.h	2008-10-16 12:07:24.000000000 +0200
+++ gtkhtml-3.24.0-180/gtkhtml/gtkhtml.h	2008-10-16 12:09:41.000000000 +0200
@@ -58,10 +58,12 @@
 
 	/* (TL 18-Nov-05) Panning variables */
 	gboolean panning;
 	gint lastx;
 	gint lasty;
+	gint x_amount_panned ;
+	gint y_amount_panned ;
 
 	guint in_selection : 1;
 	guint in_selection_drag : 1;
 
 	guint debug : 1;
